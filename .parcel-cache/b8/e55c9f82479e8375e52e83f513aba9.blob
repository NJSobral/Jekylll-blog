var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _veeValidate = require("vee-validate");
var _yup = require("yup");
exports.default = {
    components: {
        Field: _veeValidate.Field,
        Form: _veeValidate.Form,
        ErrorMessage: _veeValidate.ErrorMessage
    },
    data () {
        const simpleSchema = {
            email (value) {
                // if the field is empty
                if (!value) return "This field is required";
                // if the field is not a valid email
                if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)) return "This field must be a valid email";
                // All is good
                return true;
            },
            name (value) {
                if (value && value.trim()) return true;
                return "this field is required";
            },
            password (value) {
                if (!value) return "this field is required";
                if (typeof value === "string" && value.length < 8) return "Password must be at least 8 characters";
                if (typeof value === "string" && value.length >= 8) return true;
            }
        };
        const schema = _yup.object({
            email: _yup.string().required().email(),
            password: _yup.string().required().min(8)
        });
        return {
            passwordRules: _yup.string().required().min(8),
            simpleSchema,
            schema
        };
    },
    methods: {
        isRequired (value) {
            if (value && value.trim()) return true;
            return "this is required";
        },
        onSubmit (values) {
            alert(JSON.stringify(values, null, 2));
        }
    },
    computed: {
        reactiveschema () {
            return _yup.object({
                email: _yup.string().required().email(),
                password: _yup.string().required().min(8)
            });
        }
    }
};
