import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from "vue"

const _hoisted_1 = /*#__PURE__*/_createVNode("h1", null, "PLP -> Product listing page", -1 /* HOISTED */)
const _hoisted_2 = {
  class: "container ",
  style: {"margin-left":"150px"}
}
const _hoisted_3 = {
  class: "nav justify-content-center my-5",
  style: {"display":"inline-block"}
}
const _hoisted_4 = /*#__PURE__*/_createVNode("li", { class: "nav-item mx-3" }, " All ", -1 /* HOISTED */)
const _hoisted_5 = { class: "nav-item mx-3" }
const _hoisted_6 = { class: "grid-container" }

export function render(_ctx, _cache) {
  const _component_router_link = _resolveComponent("router-link")

  return (_openBlock(), _createBlock("div", null, [
    _hoisted_1,
    _createVNode("div", _hoisted_2, [
      _createVNode("ul", _hoisted_3, [
        _createVNode(_component_router_link, {
          to: { name: 'category', params: { name: _ctx.All } }
        }, {
          default: _withCtx(() => [
            _hoisted_4
          ]),
          _: 1 /* STABLE */
        }, 8 /* PROPS */, ["to"])
      ]),
      (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.getCategories, (category) => {
        return (_openBlock(), _createBlock("ul", {
          class: "nav justify-content-center my-5",
          style: {"display":"inline-block"},
          key: category.id
        }, [
          _createVNode(_component_router_link, {
            to: { name: 'category', params: { name: category.name } }
          }, {
            default: _withCtx(() => [
              _createVNode("li", _hoisted_5, _toDisplayString(category.name), 1 /* TEXT */)
            ]),
            _: 2 /* DYNAMIC */
          }, 1032 /* PROPS, DYNAMIC_SLOTS */, ["to"])
        ]))
      }), 128 /* KEYED_FRAGMENT */))
    ]),
    _createVNode("div", _hoisted_6, [
      _createVNode("h1", null, _toDisplayString(_ctx.getMovies[2]), 1 /* TEXT */),
      _createCommentVNode(" <div class=\"card\" v-for=\"movie in getMovies\" :key=\"movie.id\" >\n        <div class=\"card-header\"></div>\n        <div class=\"card-content\">\n          <router-link :to=\"{ name: 'movie', params: { id: movie.id } }\">\n            <h4>{{ movie.title }}</h4>\n          </router-link>\n        </div>\n        <h5>Categories:</h5>\n        <ul class=\"list squared mx-4 my-1\" v-for=\"category in movie.category\" :key=\"category.id\">\n            <li class=\"lis-item\">\n                <h6> {{category.name}}</h6>\n            </li>   \n        </ul>\n      </div> ")
    ])
  ]))
}
if (module.hot) {
  module.hot.accept(() => {
    __VUE_HMR_RUNTIME__.rerender('5e6e85-hmr', render);
  })
}